services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.4
    environment:
      - cluster.name=docker-cluster
      - cluster.routing.allocation.disk.threshold_enabled=false
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - ELASTIC_PASSWORD=changeme
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - esdata:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - elastic
    healthcheck:
      interval: 30s
      retries: 3
      start_period: 5s
      test: curl -s http://localhost:9200/_cluster/health | grep -vq '"status":"red"'
    labels:
      - "traefik.enable=true"
 
  kibana:
    image: docker.elastic.co/kibana/kibana:7.13.4
    depends_on:
      elasticsearch:
        condition: service_healthy
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
      XPACK_SECURITY_ENABLED: "true"
    volumes:
      - type: bind
        source: ./kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    ports:
      - 5601:5601
    networks:
      - elastic
    healthcheck:
      interval: 30s
      start_period: 10s
      retries: 3
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:5601/api/status
    labels:
      - "traefik.enable=true"

  traefik:
    build:
      context: ./traefik
    ports:
      - 80:80
      - 443:443
      - 8000:8000
    restart: always
    depends_on:
      - elasticsearch
      - kibana
    volumes:
      - production_traefik:/etc/traefik/acme:z 
    networks:
      - elastic

  logstash:
    image: docker.elastic.co/logstash/logstash:7.13.4
    volumes:
      - type: bind
        source: ./logstash/config/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
        read_only: true
      - type: bind
        source: ./logstash/pipeline
        target: /usr/share/logstash/pipeline
        read_only: true
    ports:
      - "5044:5044"
      - "5000:5000"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elastic
    depends_on:
      elasticsearch:
        condition: service_healthy

volumes:
  esdata: {}
  production_traefik: {}

networks:
  elastic:
    driver: bridge

